---------------- start ----------------
Mi 26. Okt 10:36:27 CEST 2016
max threads: 2
max memory: 16000 MB
time limit: 36 hours
gpu device id: 0
.qsub-2D_2_3D-train.sh.1  1
---------------------------------------

Using gpu device 0: GeForce GTX TITAN X (CNMeM is disabled, cuDNN 5103)
/home/mengqi/venv_lasagne/local/lib/python2.7/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')

current mode *** train_fusionNet / debug_ON True ***

rectified imgs of indx: 5 are loaded
rectified imgs of indx: 17 are loaded
density Cube files are loaded
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
output shape: (None, 1, 32, 32, 32)
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 16, 8, 8, 8)
shape of kshp_64 = [16  1  8  8  8]
should be 1D tensor, shape of kshp = (None, 16, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [16  1  8  8  8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 300, 8, 8, 8)
shape of kshp_64 = [300   1   8   8   8]
should be 1D tensor, shape of kshp = (None, 300, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [300   1   8   8   8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0
calling convolve by Dilated 3D layer
type(kshp) = <type 'tuple'>
shape of kshp = (None, 16, 8, 8, 8)
shape of kshp_64 = [16  1  8  8  8]
should be 1D tensor, shape of kshp = (None, 16, 8, 8, 8)
now inside dnn_gradweight3D
kshp = [16  1  8  8  8]
type = <type 'numpy.ndarray'>
kerns_shp (1D shape tensor ?) = MakeVector{dtype='int64'}.0

only update the weights in the range (feature_input,output_softmaxWeights]
the weights to be updated: [W, beta, gamma, W, b]
loading volumeNet model: /home/mengqi/dataset/MVS/lasagne/samplesVoxelVolume/modelfile_50x50x50_2D_2_3D/2D_2_3D-48-0.547_0.949.model
loaded similNet model: /home/mengqi/dataset/MVS/lasagne/save_model_2views_triplet/epoch7_acc_tr0.795_val0.789.model
starting training...
Epoch 1, batch 1: Loss 11415.5, acc 0.925878, acc_guess_all0 0.944478
Epoch 1, batch 2: Loss 8400.12, acc 0.91924, acc_guess_all0 0.949796
Epoch 1, batch 3: Loss 16156.2, acc 0.911097, acc_guess_all0 0.940179
Epoch 1, batch 4: Loss 10208.3, acc 0.906362, acc_guess_all0 0.941373
Epoch 1, batch 5: Loss 13722, acc 0.897833, acc_guess_all0 0.939007
Epoch 1, batch 6: Loss 12199.2, acc 0.892635, acc_guess_all0 0.937925
Epoch 1, batch 7: Loss 14616.9, acc 0.892377, acc_guess_all0 0.937243
Epoch 1, batch 8: Loss 14772.9, acc 0.888357, acc_guess_all0 0.934768
Epoch 1, batch 9: Loss 13740.6, acc 0.880177, acc_guess_all0 0.934522
Epoch 1, batch 10: Loss 10539, acc 0.880445, acc_guess_all0 0.935725
save model to: /home/mengqi/dataset/MVS/lasagne/samplesVoxelVolume/modelfile_50x50x50_2D_2_3D/2D_2_3D-1-0.88_0.936.model
starting validation...
val_acc 0.88269
starting training...
Epoch 2, batch 1: Loss 11543.4, acc 0.883606, acc_guess_all0 0.933675
Epoch 2, batch 2: Loss 8288.84, acc 0.903796, acc_guess_all0 0.949275
Epoch 2, batch 3: Loss 11041.9, acc 0.870092, acc_guess_all0 0.945801
Epoch 2, batch 4: Loss 12804.9, acc 0.869742, acc_guess_all0 0.940353
Epoch 2, batch 5: Loss 10772.6, acc 0.86976, acc_guess_all0 0.942413
